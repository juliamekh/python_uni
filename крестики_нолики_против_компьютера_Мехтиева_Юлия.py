# -*- coding: utf-8 -*-
"""Крестики-нолики против компьютера.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z_8ple48LAag1hOIEiW7anSE-VCw7q3o
"""

import random

board = [' ' for _ in range(9)]
b = board

def print_board():
    row1 = '|'.join(board[0:3])
    row2 = '|'.join(board[3:6])
    row3 = '|'.join(board[6:9])
    print(row1)
    print('-----')
    print(row2)
    print('-----')
    print(row3)

def check_win(player):
    if (b[0] == player and b[1] == player and b[2] == player) or \
       (b[3] == player and b[4] == player and b[5] == player) or \
       (b[6] == player and b[7] == player and b[8] == player) or \
       (b[0] == player and b[3] == player and b[6] == player) or \
       (b[1] == player and b[4] == player and b[7] == player) or \
       (b[2] == player and b[5] == player and b[8] == player) or \
       (b[0] == player and b[4] == player and b[8] == player) or \
       (b[2] == player and b[4] == player and b[6] == player):
        return True
    else:
        return False

def get_computer_move():
    possible_moves = [i for i, x in enumerate(board) if x == ' ']
    for player in ['O', 'X']:
        for move in possible_moves:
            board_copy = board[:]
            board_copy[move] = player
            if check_win(player):
                return move
    corners = []
    for move in possible_moves:
        if move in [0, 2, 6, 8]:
            corners.append(move)
    if len(corners) > 0:
        return random.choice(corners)
    if 4 in possible_moves:
        return 4
    edges = []
    for move in possible_moves:
        if move in [1, 3, 5, 7]:
            edges.append(move)
    if len(edges) > 0:
        return random.choice(edges)

def main():
    print_board()
    while True:
        player_move = input("Введите номер клетки для X (от 1 до 9): ")
        player_move = int(player_move) - 1
        if board[player_move] != ' ':
            print("Клетка уже занята, выберите другую.")
            continue
        board[player_move] = 'X'
        if check_win('X'):
            print_board()
            print("Вы выиграли!")
            break
        if ' ' not in board:
            print_board()
            print("Ничья!")
            break
        computer_move = get_computer_move()
        board[computer_move] = 'O'
        if check_win('O'):
            print_board()
            print("Вы проиграли!")
            break
        print_board()

if __name__ == '__main__':
    main()